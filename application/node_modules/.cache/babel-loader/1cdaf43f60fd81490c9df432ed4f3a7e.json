{"ast":null,"code":"var _jsxFileName = \"/Users/ankitsoni/Desktop/CSDProject/PPE application/src/CameraFeed.js\",\n  _s = $RefreshSig$();\n// CameraFeed.js\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraFeed = ({\n  camId\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const getVideoStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) videoRef.current.srcObject = stream;\n      } catch (error) {\n        console.error('Error accessing camera stream:', error);\n      }\n    };\n    getVideoStream();\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    playsInline: true,\n    muted: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(CameraFeed, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","CameraFeed","camId","_s","videoRef","getVideoStream","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","getTracks","forEach","track","stop","ref","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ankitsoni/Desktop/CSDProject/PPE application/src/CameraFeed.js"],"sourcesContent":["// CameraFeed.js\nimport React, { useEffect, useRef } from 'react';\n\nconst CameraFeed = ({ camId }) => {\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    const getVideoStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        if (videoRef.current) videoRef.current.srcObject = stream;\n      } catch (error) {\n        console.error('Error accessing camera stream:', error);\n      }\n    };\n\n    getVideoStream();\n\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  return <video ref={videoRef} autoPlay playsInline muted />;\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,IAAIN,QAAQ,CAACO,OAAO,EAAEP,QAAQ,CAACO,OAAO,CAACC,SAAS,GAAGN,MAAM;MAC3D,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDR,cAAc,CAAC,CAAC;IAEhB,OAAO,MAAM;MACX,IAAID,QAAQ,CAACO,OAAO,IAAIP,QAAQ,CAACO,OAAO,CAACC,SAAS,EAAE;QAClDR,QAAQ,CAACO,OAAO,CAACC,SAAS,CAACG,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACvE;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOlB,OAAA;IAAOmB,GAAG,EAAEf,QAAS;IAACgB,QAAQ;IAACC,WAAW;IAACC,KAAK;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D,CAAC;AAACvB,EAAA,CAvBIF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}