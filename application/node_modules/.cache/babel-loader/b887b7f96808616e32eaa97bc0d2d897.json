{"ast":null,"code":"var _jsxFileName = \"/Users/ankitsoni/Desktop/CSDProject/PPE application/src/ZonePage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ZonePage.css';\n\n// Mock JSON data structure for alert messages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockAlerts = [{\n  cameraId: 1,\n  message: 'No PPE detected on Cam 1'\n}\n// Add more alerts as needed\n];\nconst CameraFeed = ({\n  camId\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const enableStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) videoRef.current.srcObject = stream;\n      } catch (err) {\n        console.error(\"Error accessing the device camera\", err);\n      }\n    };\n    enableStream();\n\n    // Cleanup function to stop the video stream\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    className: \"video\",\n    ref: videoRef,\n    autoPlay: true,\n    playsInline: true,\n    muted: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n  ;\n};\n_s(CameraFeed, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = CameraFeed;\nconst ZonePage = () => {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const cams = [1, 2, 3, 4]; // Assuming you have 4 camera feeds\n  const [alerts, setAlerts] = useState(mockAlerts);\n  const goToCamera = camId => {\n    navigate(`/zone/${id}/camera/${camId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zone-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"zone-title\",\n      children: [\"Zone \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-grid\",\n        children: cams.map(camId => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-feed-container\",\n          onClick: () => goToCamera(camId),\n          children: [/*#__PURE__*/_jsxDEV(CameraFeed, {\n            camId: camId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"camera-label\",\n            children: [\"Cam \", camId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, camId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Alert Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alert.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(ZonePage, \"cXVFSS9aZ5xc5RiiLcN8PgKFbp8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = ZonePage;\nexport default ZonePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"CameraFeed\");\n$RefreshReg$(_c2, \"ZonePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","useNavigate","jsxDEV","_jsxDEV","mockAlerts","cameraId","message","CameraFeed","camId","_s","videoRef","enableStream","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","error","getTracks","forEach","track","stop","className","ref","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c","ZonePage","_s2","id","navigate","cams","alerts","setAlerts","goToCamera","children","map","onClick","alert","index","_c2","$RefreshReg$"],"sources":["/Users/ankitsoni/Desktop/CSDProject/PPE application/src/ZonePage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ZonePage.css';\n\n// Mock JSON data structure for alert messages\nconst mockAlerts = [\n  { cameraId: 1, message: 'No PPE detected on Cam 1' },\n  // Add more alerts as needed\n];\n\nconst CameraFeed = ({ camId }) => {\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    const enableStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        if (videoRef.current) videoRef.current.srcObject = stream;\n      } catch (err) {\n        console.error(\"Error accessing the device camera\", err);\n      }\n    };\n\n    enableStream();\n\n    // Cleanup function to stop the video stream\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  return <video className=\"video\" ref={videoRef} autoPlay playsInline muted />;;\n};\n\nconst ZonePage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const cams = [1, 2, 3, 4]; // Assuming you have 4 camera feeds\n  const [alerts, setAlerts] = useState(mockAlerts);\n\n  const goToCamera = (camId) => {\n    navigate(`/zone/${id}/camera/${camId}`);\n  };\n\n  return (\n    <div className=\"zone-page\">\n      <h1 className=\"zone-title\">Zone {id}</h1>\n      <div className=\"camera-container\">\n        <div className=\"camera-grid\">\n          {cams.map((camId) => (\n            <div key={camId} className=\"camera-feed-container\" onClick={() => goToCamera(camId)}>\n              <CameraFeed camId={camId} />\n              <label className=\"camera-label\">Cam {camId}</label>\n            </div>\n          ))}\n        </div>\n        <div className=\"alert-box\">\n          <h2>Alert Box</h2>\n          {/* Render alerts here */}\n          {alerts.map((alert, index) => (\n            <p key={index}>{alert.message}</p>\n          ))}\n        </div>\n      </div>\n    </div>\n    \n  );\n};\n\n\n\n\nexport default ZonePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}