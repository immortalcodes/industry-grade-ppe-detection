{"ast":null,"code":"var _jsxFileName = \"/Users/ankitsoni/Desktop/CSDProject/PPE application/src/HomePage.js\",\n  _s = $RefreshSig$();\nimport './HomePage.css';\nimport React, { useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// New VideoFeed component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFeed = ({\n  zoneId\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const enableStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error(\"Error accessing the device camera\", err);\n      }\n    };\n    enableStream();\n\n    // Cleanup function to stop the video stream\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Function to navigate to the zone page\n  const goToZone = () => {\n    navigate(`/zone/${zoneId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-feed\",\n    onClick: goToZone,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Zone \", zoneId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFeed, \"GEpsYAy6BTz9zgPQd8nKLy61hw4=\", false, function () {\n  return [useNavigate];\n});\n_c = VideoFeed;\nconst HomePage = () => {\n  const zones = [1, 2, 3, 4]; // List of zones\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PPE Detection System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: zones.map(zoneId => /*#__PURE__*/_jsxDEV(VideoFeed, {\n        zoneId: zoneId\n      }, zoneId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c2 = HomePage;\nexport default HomePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoFeed\");\n$RefreshReg$(_c2, \"HomePage\");","map":{"version":3,"names":["React","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","VideoFeed","zoneId","_s","videoRef","navigate","enableStream","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","error","getTracks","forEach","track","stop","goToZone","className","onClick","children","ref","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c","HomePage","zones","map","_c2","$RefreshReg$"],"sources":["/Users/ankitsoni/Desktop/CSDProject/PPE application/src/HomePage.js"],"sourcesContent":["import './HomePage.css';\nimport React, { useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// New VideoFeed component\nconst VideoFeed = ({ zoneId }) => {\n  const videoRef = useRef(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const enableStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error(\"Error accessing the device camera\", err);\n      }\n    };\n\n    enableStream();\n\n    // Cleanup function to stop the video stream\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Function to navigate to the zone page\n  const goToZone = () => {\n    navigate(`/zone/${zoneId}`);\n  };\n\n  return (\n    <div className=\"video-feed\" onClick={goToZone}>\n      <video ref={videoRef} autoPlay playsInline muted />\n      <p>Zone {zoneId}</p>\n    </div>\n  );\n};\n\nconst HomePage = () => {\n  const zones = [1, 2, 3, 4]; // List of zones\n\n  return (\n    <div className=\"homepage\">\n      <h1>PPE Detection System</h1>\n      <div className=\"video-grid\">\n        {zones.map(zoneId => (\n          <VideoFeed key={zoneId} zoneId={zoneId} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}